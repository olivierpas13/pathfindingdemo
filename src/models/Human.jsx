/* eslint-disable react/prop-types */
/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: KOMIRA.studio (https://sketchfab.com/komira)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/stickman-cd59f48ed6a7492da639efdc55f2c1f8
Title: Stickman
*/

import  { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import humanM from "../assets/stickman.glb";
import { useEffect } from "react";

const Human = (props) => {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(humanM);
  const { actions } = useAnimations(animations, group);
//   const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);

  useEffect(() => {
    actions["Run"].play();
  }, []);
  return (
    <group  ref={group} {...props} dispose={null}>
        <group name="Sketchfab_Scene">
          <group
            name="Sketchfab_model"
            rotation={[-Math.PI / 2, 0, 0]}
            scale={0.004}
          >
            <group
              name="9cbc97f5707b47ed9cf8d663296c6c1efbx"
              rotation={[Math.PI / 2, 0, 0]}
            >
              <group name="Object_2">
                <group name="RootNode">
                  <group
                    name="SimpleCharacter"
                    rotation={[-Math.PI / 2, 0, 0]}
                    scale={100}
                  />
                  <group name="Armature001">
                    <group name="Object_6">
                      <primitive object={nodes._rootJoint} />
                      <skinnedMesh
                        name="Object_9"
                        geometry={nodes.Object_9.geometry}
                        material={materials.Material}
                        skeleton={nodes.Object_9.skeleton}
                      />
                      <group
                        name="Object_8"
                        rotation={[-Math.PI / 2, 0, 0]}
                        scale={100}
                      />
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
    </group>
  );
};

useGLTF.preload(humanM);

export default Human;
